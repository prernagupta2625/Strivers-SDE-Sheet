
class Solution
{
    public int[][] overlappedInterval(int[][] Intervals)
    {
        // Code here // Code here
        	int colmn=1;
		  Arrays.sort(Intervals, new Comparator<int[]>() {
                    public int compare(int[] frst, int[] scnd) {
                          if(frst[colmn-1] > scnd[colmn-1]) {
                                 return 1;
                           }
                          else return -1;
                           }
                          });
        int ans[][]=new int[Intervals.length][2];
        int beg,end,k=0,f=0;
        beg=Intervals[0][0];
        end=Intervals[0][1];
        for(int i=0;i<Intervals.length;i++)
        {
            if( Intervals[i][0]<=end)
            {
                if(end< Intervals[i][1])
                end=Intervals[i][1];
            }
            else
            {
                if(i==Intervals.length-1)
                f=1;
                ans[k][0]=beg;
                ans[k][1]=end;
                k++;
                beg=Intervals[i][0];
                end=Intervals[i][1];
            }
            if(i==Intervals.length-1)
            {
                ans[k][0]=beg;
                ans[k][1]=end;
                k++;
            }
        }
        ans=Arrays.copyOf(ans,k);
        return ans;
    }
}
