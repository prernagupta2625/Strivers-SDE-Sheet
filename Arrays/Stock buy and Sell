GFG - Solution

class Solution{
    //Function to find the days of buying and selling stock for max profit.
    ArrayList<ArrayList<Integer> > stockBuySell(int A[], int n) {
        // code here
        ArrayList<ArrayList<Integer>> arr=new ArrayList<>();
        int buy=0,sell=0;
        for(int i=0;i<A.length;i++)
        {
            if(A[i]>A[sell])
            sell=i;
            else if(A[i]<A[sell])
            {   if(A[buy]<A[sell])
                 arr.add(new ArrayList<Integer>(Arrays.asList(buy,sell)));
                buy=i;
                sell=buy;
            }
            if(i==A.length-1 && A[buy]<A[sell])
            {
                arr.add(new ArrayList<Integer>(Arrays.asList(buy,sell)));
                // 
            }
        }
        return arr;
    }
}

Coding Studio Solution -

import java.util.* ;
import java.io.*; 
import java.util.ArrayList;

public class Solution{
    public static int maximumProfit(ArrayList<Integer> A){
        // Write your code here.

         ArrayList<ArrayList<Integer>> arr=new ArrayList<>();
        int max=0,num=A.get(0);
        for(int i=0;i<A.size();i++)
        {
          if(A.get(i)>num)
          {
              max=Math.max(max,A.get(i)-num);
             
          }
          else
          num=A.get(i);
        }
        return max;
    }
}
