import java.util.* ;
import java.io.*; 
/*

	Following is the structure used to represent the Binary Tree Node

	class BinaryTreeNode<T> {
		T val;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;

		public BinaryTreeNode(T val) {
			this.val = val;
			this.left = null;
			this.right = null;
		}
	}

*/

import java.util.*;

public class Solution {

  public static ArrayList<Integer> getLevelOrder(BinaryTreeNode root) {
    //Your code goes here

	  Queue<BinaryTreeNode> que=new LinkedList<>();
        que.add(root);
        que.add(null);
        ArrayList<Integer> list=new ArrayList<Integer>();
        func(list,que);
        return list;
  }
  static void func(ArrayList<Integer> list,Queue<BinaryTreeNode> que)
    {
         while(que.peek()!=null)
         {
            
             while(que.peek()!=null)
             {
                 BinaryTreeNode node=que.remove();
                 
                 list.add(node.val);
                 if(node.left!=null)
                 que.add(node.left);
                 if(node.right!=null)
                 que.add(node.right);
                
             }
             que.remove(null);
             que.add(null);
         }
    }

}
