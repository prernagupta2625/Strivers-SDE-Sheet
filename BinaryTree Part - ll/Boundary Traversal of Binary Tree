//User function Template for Java

// class Node  
// { 
//     int data; 
//     Node left, right; 
   
//     public Node(int d)  
//     { 
//         data = d; 
//         left = right = null; 
//     } 
// }

class Solution
{
	ArrayList <Integer> boundary(Node node)
	{
	    ArrayList<Integer> list=new ArrayList<>();
	       ArrayList<Integer> list3=new ArrayList<>();
	       list.add(node.data);
	       if(node.left==null && node.right==null)
	       return list;
	       left(list,node.left);
	       bottom(list,node);
	       right(list3,node.right);
	       
	       Collections.reverse(list3);
	       list.addAll(list3);
	       return list;
	           
	        
}
public static void left(ArrayList<Integer> list1,Node node)
{
    if(node!=null && (node.left!=null||node.right!=null))
    list1.add(node.data);
    else return;
    if(node.left!=null)
    left(list1,node.left);
    else
    left(list1,node.right);
}

public static void bottom(ArrayList<Integer> list2,Node node)
{
    if(node==null)
    return;
    if(node.left==null && node.right==null)
    {
        list2.add(node.data);
        return;
    }
    else
    {
        bottom(list2,node.left);
        bottom(list2,node.right);
    }
}

static void right(ArrayList<Integer> list3,Node node)
{
     if(node!=null && (node.left!=null||node.right!=null))
    list3.add(node.data);
    else return;
    if(node.right!=null)
    right(list3,node.right);
    else
    right(list3,node.left);
}
}
