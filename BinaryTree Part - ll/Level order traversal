import java.util.* ;
import java.io.*; 
/*

	Following is the structure used to represent the Binary Tree Node

	class BinaryTreeNode<T> {
		T val;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;

		public BinaryTreeNode(T val) {
			this.val = val;
			this.left = null;
			this.right = null;
		}
	}

*/

import java.util.ArrayList;

public class Solution {

  public static ArrayList<Integer> getLevelOrder(BinaryTreeNode root) {
    //Your code goes here
  }
  static void func(ArrayList<Integer> list,Queue<TreeNode> que)
    {
         while(que.peek()!=null)
         {
             int f=0;
             while(que.peek()!=null)
             {
                 TreeNode<Integer> node=que.remove();
                 int d=node.data;
                 if(f==0)
                 {list.add(d);
                 f=1;
                 }
                 if(node.left!=null)
                 que.add(node.left);
                 if(node.right!=null)
                 que.add(node.right);
                
             }
             que.remove(null);
             que.add(null);
         }
    }

}
