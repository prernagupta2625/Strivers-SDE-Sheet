class GFG
{
    //Function to store the zig zag order traversal of tree in a list.
	ArrayList<Integer> zigZagTraversal(Node root)
	{
	    //Add your code here.
	    int f=0;
	    Queue<Node> que=new LinkedList<>();
	    que.add(root);
	    que.add(null);
	    ArrayList<Integer> list=new ArrayList<Integer>();
	    while(que.peek()!=null)
	    {
	        ArrayList<Integer> arr=new ArrayList<>();
	        arr.clear();
	        while(que.peek()!=null)
	        {
	            Node node=que.remove();
	            arr.add(node.data);
	            if(node.left!=null)
	            que.add(node.left);
	            if(node.right!=null)
	            que.add(node.right);
	            
	            
	        }
	        if(f==0)
	        {
	            for(int i=0;i<arr.size();i++)
	            {
	                list.add(arr.get(i));
	            }
	        f=1;
	        }
	        else
	        {
	           for(int j=arr.size()-1;j>=0;j--)
	           {
	               list.add(arr.get(j));
	           }
	            f=0;
	        }
	        que.remove(null);
	        que.add(null);
	        
	    }
	    return list;
	    
	}
}
